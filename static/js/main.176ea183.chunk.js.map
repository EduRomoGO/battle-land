{"version":3,"sources":["util/withAnimation.js","components/Dice/Dice.js","components/Dice/DiceWithAnimations.js","components/Fighter/Health.svg","components/Fighter/Fighter.js","components/Draw/Draw.js","components/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["animationIn","animationOut","Dice","value","isValid","parseInt","isValidDiceNumber","className","getValue","withAnimation","AnimatedComponent","props","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref","svgRef","title","ref","ForwardRef","forwardRef","getClassName","position","getHealthSvgStyle","initialHealth","currentHealth","circumference","radius","Math","PI","missingHealth","strokeDasharray","strokeDashoffset","getStrokeDashoffset","Fighter","type","dmg","attack","undefined","hasGameStarted","animationDelay","useEffect","healthRefCurrent","healthRef","current","anime","timeline","add","targets","duration","opacity","translateY","begin","healthStyle","style","useRef","getDmgTaken","tabIndex","getAvatar","map","result","id","DiceWithAnimations","display","durationOut","reduce","total","next","getTotalAttackValue","Draw","isDraw","DrawWithAnimation","delay","dice","getDiceFace","floor","random","getCurrentHealth","state","health","getAttack","getAttackPoints","fighter","acc","getDmgResults","monster","character","monsterAttack","characterAttack","max","hasGameFinished","isAttackDraw","getDamageFor","getInitialHealth","initialState","getFighterPosition","reducer","action","actionsMap","resetState","newState","payload","dmgResults","Error","throwError","Game","useReducer","dispatch","bFightersRef","attackButtonRef","bFightersRefCurrent","attackButtonRefCurrent","attacker","determineAttacker","attackerClass","animateAttacker","positionNodeMap","document","querySelector","distance","nodeLeft","left","nodeRight","right","movingNodePosition","offsetLeft","offsetWidth","getDistanceFromSide","disabled","translateX","getRetreatMovementValues","complete","classList","easing","fontSize","remove","handleAttackClick","renderFighter","handlePlayAgainClick","msg","onClick","renderWinner","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.176ea183.chunk.js","sourcesContent":["import React from 'react';\nimport { AnimateOnChange } from 'react-animation';\n\nexport default (animationIn, animationOut) => {\n  return (AnimatedComponent) => (props) => {\n    return <AnimateOnChange animationIn={animationIn} animationOut={animationOut}>\n       <AnimatedComponent {...props} />\n    </AnimateOnChange>;\n  };\n};\n","import React from 'react';\nimport './Dice.css';\n\nconst Dice = ({ value = '?' }) => {\n  const isValidDiceNumber = value => parseInt(value, 10) <= 6 && parseInt(value, 10) >= 1;\n  const isValid = value => isValidDiceNumber(value) || value === '?';\n  const getValue = value => {\n    return isValid(value) ? value : 'An error occurred';\n  }\n\n  return <div className='c-dice component-wrapper'>\n      <div className='js-value'>{getValue(value)}</div>\n  </div>\n};\n\nexport default Dice;\n","import Dice from './Dice.js';\nimport withAnimation from '../../util/withAnimation.js';\n\nexport default withAnimation('bounceIn', 'bounceOut')(Dice);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"circle\", {\n  className: \"progress-ring__circle\"\n});\n\nvar SvgHealth = function SvgHealth(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    className: \"progress-ring\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgHealth, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Health.3fcfe53c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useRef } from 'react';\nimport DiceWithAnimations from '../Dice/DiceWithAnimations.js';\nimport './Fighter.css';\nimport { ReactComponent as HealthSvg } from './Health.svg';\nimport anime from 'animejs/lib/anime.es.js';\nimport { AnimateOnChange } from 'react-animation';\n\nconst getAvatar = type => type === 'monster' ? '🧟‍♂️' : '🧙‍♂️';\n\nconst getDmgTaken = dmg => dmg ? `- ${dmg}` : '';\nconst getTotalAttackValue = (hasGameStarted, attack) => hasGameStarted ? attack.reduce((total, next) => total + next, 0) : '?';\n\nconst getClassName = position => `c-fighter__attributes c-fighter__attributes__${position}`;\n\nconst getHealthSvgStyle = (initialHealth, currentHealth) => {\n  const radius = 52;\n  const circumference = radius * 2 * Math.PI;\n\n  const missingHealth = initialHealth - currentHealth;\n  const getStrokeDashoffset = () => {\n    let strokeDashoffset;\n\n    if (currentHealth === 0) {\n      strokeDashoffset = circumference;\n    } else if (missingHealth === 0) {\n      strokeDashoffset = 0;\n    } else {\n      const currentHealthPerc = (currentHealth / initialHealth) * 100;\n\n      strokeDashoffset = circumference - (currentHealthPerc / 100) * circumference;\n    }\n\n    return strokeDashoffset;\n  }\n\n  return {\n    strokeDasharray: `${circumference} ${circumference}`,\n    strokeDashoffset: getStrokeDashoffset(),\n  };\n};\n\nconst Fighter = ({ type, className, initialHealth, currentHealth, dmg, attack = [undefined, undefined], hasGameStarted, position, animationDelay }) => {\n  useEffect(() => {\n    const healthRefCurrent = healthRef.current;\n\n    const animateDmg = () => {\n      anime.timeline()\n        .add({\n          targets: '.dmg-taken',\n          duration: 600,\n          opacity: [0, 1],\n          translateY: [30, 0],\n        }, animationDelay)\n        .add({\n          targets: '.dmg-taken',\n          duration: 600,\n          opacity: [1, 0],\n          translateY: [0, -30],\n          begin: () => {\n            const healthStyle = getHealthSvgStyle(initialHealth, currentHealth);\n\n            healthRefCurrent.style.strokeDasharray = healthStyle.strokeDasharray;\n            healthRefCurrent.style.strokeDashoffset = healthStyle.strokeDashoffset;\n          },\n        });\n    };\n\n    if (dmg > 0) {\n      animateDmg();\n    }\n\n    if (!hasGameStarted) {\n      const healthStyle = getHealthSvgStyle(initialHealth, currentHealth);\n\n      healthRefCurrent.style.strokeDasharray = healthStyle.strokeDasharray;\n      healthRefCurrent.style.strokeDashoffset = healthStyle.strokeDashoffset;\n    }\n  });\n  const healthRef = useRef();\n\n  return <section className={`c-fighter ${className} component-wrapper`}>\n    <div className='dmg-taken'>{getDmgTaken(dmg)}</div>\n    <div className={getClassName(position)}>\n      <div className='c-fighter__health-avatar-wrapper'>\n        <HealthSvg ref={healthRef} className='c-fighter-health-svg' tabIndex='0' />\n        <div className='c-fighter__avatar'>{getAvatar(type)}</div>\n      </div>\n      <div className='c-fighter__die-wrapper'>\n        {attack.map((result, id) => <DiceWithAnimations key={id} value={result} />)}\n      </div>\n      <AnimateOnChange style={{ display: 'flex' }} durationOut={500}>\n        <div className='c-fighter__total-attack'>{getTotalAttackValue(hasGameStarted, attack)}</div>\n      </AnimateOnChange>\n    </div>\n  </section>;\n};\n\nexport default Fighter;\n","import React, { useEffect } from 'react';\nimport './Draw.css';\nimport anime from 'animejs/lib/anime.es.js';\n\nexport const Draw = ({className, isDraw, hasGameStarted}) => {\n  const getClassName = () => `c-draw ${className}`;\n\n  return <div className={getClassName()}>{(hasGameStarted && isDraw) ? 'Draw' : ''}</div>;\n}\n\nexport const DrawWithAnimation = (props) => {\n  useEffect(() => {\n    anime({\n      targets: '.draw-animation',\n      delay: 700,\n      opacity: [0, 1],\n    });\n  });\n\n  return <Draw className='draw-animation' {...props} />\n};\n","import React, { useReducer, useEffect, useRef } from 'react';\nimport Fighter from '../Fighter/Fighter.js';\nimport { DrawWithAnimation } from '../Draw/Draw.js';\nimport './Game.css';\nimport anime from 'animejs/lib/anime.es.js';\n\n// const dice = [1];\nconst dice = [1, 2, 3, 4, 5, 6];\nconst getDiceFace = () => Math.floor(Math.random() * dice.length) + 1;\n\nconst getCurrentHealth = (state, type) => state[type].health;\nconst getAttack = (state, type) => state[type].attack;\n\nconst getAttackPoints = fighter => fighter.attack && fighter.attack.reduce((acc, next) => acc + next, 0);\n\nconst getDmgResults = ({ monster, character }) => {\n  const monsterAttack = getAttackPoints(monster);\n  const characterAttack = getAttackPoints(character);\n\n  return {\n    monster: Math.max(characterAttack - monsterAttack, 0),\n    character: Math.max(monsterAttack - characterAttack, 0),\n  };\n};\n\nconst hasGameFinished = ({ monster, character }) => !monster.health || !character.health;\nconst hasGameStarted = ({ monster, character }) => monster.attack && character.attack;\n\nconst isAttackDraw = ({ monster, character }) => getAttackPoints(monster) === getAttackPoints(character);\n\nconst getDamageFor = (state, fighter) => getDmgResults(state)[fighter];\n\nconst getInitialHealth = (type) => initialState[type].health;\n\nconst determineWinner = ({ monster }) => !monster.health ? 'character' : 'monster';\nconst determineAttacker = ({ monster, character }) => {\n  return (getAttackPoints(monster) > getAttackPoints(character)) ? 'monster' : 'character';\n};\n\nconst getFighterPosition = type => type === 'character' ? 'left' : 'right';\n\nconst animationDelay = 1800;\n\n\nconst initialHealth = 1;\nconst initialState = {\n  monster: { health: initialHealth, attack: undefined },\n  character: { health: initialHealth, attack: undefined },\n};\n\nconst reducer = (state, action) => {\n  const actionsMap = {\n    resetState: () => initialState,\n    attack: () => {\n      const newState = {\n        monster: { attack: action.payload.attack.monster },\n        character: { attack: action.payload.attack.character },\n      };\n      const dmgResults = getDmgResults(newState);\n\n      newState.character.health = Math.max(state.character.health - dmgResults.character, 0);\n      newState.monster.health = Math.max(state.monster.health - dmgResults.monster, 0);\n\n      return newState;\n    },\n  };\n  const throwError = () => { throw new Error() };\n\n  return actionsMap[action.type] ? actionsMap[action.type]() : throwError();\n};\n\n\n\nconst Game = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const bFightersRef = useRef(null);\n  const attackButtonRef = useRef(null);\n  useEffect(() => {\n    const bFightersRefCurrent = bFightersRef.current;\n    const attackButtonRefCurrent = attackButtonRef.current;\n\n    if (!isAttackDraw(state)) {\n      const attacker = determineAttacker(state);\n      const attackerClass = `.c-fighter-${attacker}`;\n\n      const getDistanceFromSide = ({ left: nodeLeft, right: nodeRight, movingNodePosition }) => {\n        let distance;\n\n        if (movingNodePosition === 'right') {\n          distance = nodeRight.offsetLeft - nodeRight.offsetWidth - nodeLeft.offsetLeft;\n        } else {\n          distance = nodeRight.offsetLeft - nodeLeft.offsetWidth - nodeLeft.offsetLeft\n        }\n\n        return distance;\n      }\n\n      const animateAttacker = attacker => {\n        const positionNodeMap = {\n          [getFighterPosition('character')]: document.querySelector('.c-fighter-character'),\n          [getFighterPosition('monster')]: document.querySelector('.c-fighter-monster'),\n        }\n\n        const distance = getDistanceFromSide({ ...positionNodeMap, movingNodePosition: getFighterPosition(attacker) });\n\n        const getAttackMovementValues = (position) => {\n          return position === 'right' ? [0, -distance] : [0, distance];\n        };\n        const getRetreatMovementValues = (position) => {\n          return position === 'right' ? [-distance, 0] : [distance, 0];\n        };\n\n        if (attackButtonRefCurrent) {\n          attackButtonRefCurrent.disabled = true;\n        }\n\n        return anime.timeline()\n          .add({\n            targets: attackerClass,\n            translateX: getAttackMovementValues(getFighterPosition(attacker)),\n            opacity: 1,\n            duration: 500,\n            // elasticity: 100,\n          }, animationDelay)\n          .add({\n            targets: attackerClass,\n            translateX: getRetreatMovementValues(getFighterPosition(attacker)),\n            opacity: 1,\n            duration: 500,\n            complete: () => {\n              if (attackButtonRefCurrent) {\n                attackButtonRefCurrent.disabled = false;\n              }\n            }\n          });\n      };\n\n      if (hasGameFinished(state)) {\n        animateAttacker(attacker)\n          .add({\n            targets: '.b-winner',\n            opacity: [0, 1],\n            begin: () => {\n              attackButtonRefCurrent.classList.add('hidden');\n              bFightersRefCurrent.classList.add('b-fighters--blur');\n            },\n            easing: 'easeInOutQuad',\n          })\n          .add({\n            targets: '.b-winner__msg',\n            opacity: [0, 1],\n            fontSize: ['1rem', '5rem'],\n            easing: 'easeInOutQuad',\n          })\n          .add({\n            targets: '.b-winner__play-again',\n            opacity: [0, 1],\n            easing: 'easeInOutQuad',\n          }, '+=200');\n      } else {\n        animateAttacker(attacker);\n      }\n    }\n\n    return () => {\n      attackButtonRefCurrent.classList.remove('hidden');\n      bFightersRefCurrent.classList.remove('b-fighters--blur');\n    }\n  });\n\n  const handleAttackClick = () => {\n    const attack = {\n      monster: [getDiceFace(), getDiceFace()],\n      character: [getDiceFace(), getDiceFace()],\n    };\n\n    dispatch({ type: 'attack', payload: { attack } });\n  };\n\n\n  const renderAttackButton = () => {\n    return <button ref={attackButtonRef} className='button button--salmon button--big-font' onClick={handleAttackClick}>Attack</button>;\n  };\n\n  const renderFighter = type => {\n    return <Fighter className={`c-fighter-${type}`} type={type} currentHealth={getCurrentHealth(state, type)} attack={getAttack(state, type)} dmg={getDamageFor(state, type)} hasGameStarted={hasGameStarted(state)} position={getFighterPosition(type)} initialHealth={getInitialHealth(type)} animationDelay={animationDelay} />;\n  };\n\n  const resetGameStatus = () => {\n    dispatch({ type: 'resetState' });\n  };\n\n  const handlePlayAgainClick = () => {\n    resetGameStatus();\n  };\n\n  const renderWinner = (state) => {\n    if (hasGameFinished(state)) {\n      const winner = determineWinner(state);\n      const msg = (winner === 'monster') ? 'Game Over' : 'Victory!!';\n\n      return <section className='b-winner'>\n        <div className='b-winner__msg'>{msg}</div>\n        <button className='b-winner__play-again button button--sun button--big-font' onClick={handlePlayAgainClick}>Play Again</button>\n      </section>;\n    }\n  };\n\n  return <section className='c-game'>\n    {renderWinner(state)}\n    <div className='c-game__actions'>{renderAttackButton()}</div>\n    <section ref={bFightersRef} className='b-fighters'>\n      <div className='b-fighters__subwrapper'>\n        {renderFighter('character')}\n        <DrawWithAnimation hasGameStarted={hasGameStarted(state)} isDraw={isAttackDraw(state)} />\n        {renderFighter('monster')}\n      </div>\n    </section>\n  </section>\n};\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport './buttons.css';\nimport Game from './components/Game/Game.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 className='title'>Battle Land</h1>\n      </header>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}